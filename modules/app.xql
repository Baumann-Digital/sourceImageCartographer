xquery version "3.1";

module namespace app="http://www.edirom.de/apps/sourceImageCartographer/templates";

import module namespace templates="http://exist-db.org/xquery/templates" ;
import module namespace config="http://www.edirom.de/apps/sourceImageCartographer/config" at "config.xqm";

declare namespace mei="http://www.music-encoding.org/ns/mei";
declare namespace tei="http://www.tei-c.org/ns/1.0";

(:~
 : This is a sample templating function. It will be called by the templating module if
 : it encounters an HTML element with an attribute: data-template="app:test" or class="app:test" (deprecated). 
 : The function has to take 2 default parameters. Additional parameters are automatically mapped to
 : any matching request or function parameter.
 : 
 : @param $node the HTML node with the attribute which triggered this call
 : @param $model a map containing arbitrary data - used to pass information between template calls
 :)
declare function app:test($node as node(), $model as map(*)) {
    <p>Dummy template output generated by function app:test at {current-dateTime()}. The templating
        function was triggered by the class attribute <code>class="app:test"</code>.</p>
};

declare function app:getMeasureCoordTitle($node as node(), $model as map(*)) {
    let $uri := request:get-parameter('uri', '')
    return
        
            <h3>{$uri}</h3>
};

declare function app:getMeasureCoordVariables($node as node(), $model as item()*) {
    
    let $uri := request:get-parameter('uri', '')
    return

    <div>
        <input type="hidden" id="measureCoordUri" value="{$uri}"/>
    </div>
};